[{"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\index.js":"1","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\App.js":"2","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\context\\ChatProvider.js":"3","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\Pages\\ChatPage.js":"4","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\Pages\\HomePage.js":"5","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\ChatBox.js":"6","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\MyChats.js":"7","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\Authentication\\Signup.js":"8","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\Authentication\\Login.js":"9","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\SideDrawer.js":"10","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\services\\helper.js":"11","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\ChatLoading.js":"12","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\SingleChat.js":"13","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\config\\ChatLogics.js":"14","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\GroupChatModal.js":"15","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\ProfileModal.js":"16","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\UserAvatar\\UserListItem.js":"17","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\ScrollableChat.js":"18","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\UserAvatar\\UserBadgeItem.js":"19","C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\UpdateGroupChatModal.js":"20"},{"size":490,"mtime":1695839492667,"results":"21","hashOfConfig":"22"},{"size":347,"mtime":1695839492481,"results":"23","hashOfConfig":"22"},{"size":1346,"mtime":1695839493313,"results":"24","hashOfConfig":"22"},{"size":990,"mtime":1695877240233,"results":"25","hashOfConfig":"22"},{"size":2790,"mtime":1695877019530,"results":"26","hashOfConfig":"22"},{"size":625,"mtime":1695848671334,"results":"27","hashOfConfig":"22"},{"size":3736,"mtime":1695875497289,"results":"28","hashOfConfig":"22"},{"size":5954,"mtime":1695845225215,"results":"29","hashOfConfig":"22"},{"size":3972,"mtime":1695845120756,"results":"30","hashOfConfig":"22"},{"size":6280,"mtime":1695851436469,"results":"31","hashOfConfig":"22"},{"size":69,"mtime":1695839493351,"results":"32","hashOfConfig":"22"},{"size":589,"mtime":1695839492788,"results":"33","hashOfConfig":"22"},{"size":7039,"mtime":1695849087136,"results":"34","hashOfConfig":"22"},{"size":1337,"mtime":1695839493276,"results":"35","hashOfConfig":"22"},{"size":5037,"mtime":1695839493109,"results":"36","hashOfConfig":"22"},{"size":1859,"mtime":1695851987876,"results":"37","hashOfConfig":"22"},{"size":885,"mtime":1695839493068,"results":"38","hashOfConfig":"22"},{"size":1824,"mtime":1695848913329,"results":"39","hashOfConfig":"22"},{"size":526,"mtime":1695839493040,"results":"40","hashOfConfig":"22"},{"size":7265,"mtime":1695839493217,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vggqnl",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\index.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\App.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\context\\ChatProvider.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\Pages\\ChatPage.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\Pages\\HomePage.js",["104"],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\ChatBox.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\MyChats.js",["105"],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\Authentication\\Signup.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\Authentication\\Login.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\SideDrawer.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\services\\helper.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\ChatLoading.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\SingleChat.js",["106","107","108","109","110","111"],[],"import React, { useEffect, useState } from \"react\";\nimport { ChatState } from \"../context/ChatProvider\";\nimport {\n  Box,\n  FormControl,\n  IconButton,\n  Input,\n  Spinner,\n  Text,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport axios from \"axios\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport \"./styles.css\";\nimport io from \"socket.io-client\";\nimport animationData from \"../animations/typing.json\";\nimport { Button } from \"@material-ui/core\";\n\nimport { BASE_URL } from \"../services/helper\";\n\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      setLoading(true);\n      const { data } = await axios.get(\n        `${BASE_URL}/api/message/${selectedChat._id}`,\n        config\n      );\n      console.log(data);\n      setMessages(data);\n      setLoading(false);\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  function handleKeyDown(event) {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  }\n\n  useEffect(() => {\n    socket = io(BASE_URL);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n    selectedChatCompare = selectedChat;\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message received\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare ||\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const sendMessage = async () => {\n    if (newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          `${BASE_URL}/api/message`,\n          {\n            content: newMessage,\n            chatId: selectedChat._id,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n    if (!socketConnected) return;\n    if (e.key === \"Enter\" || e.target.value === \"\") {\n      // If Enter key is pressed or the input is empty, stop typing\n      socket.emit(\"stop typing\", selectedChat._id);\n    } else {\n      // If a key is pressed and the input is not empty, emit \"typing\" event\n      socket.emit(\"typing\", selectedChat._id);\n    }\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            display=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              display={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n\n            {!selectedChat.isGroupChat ? (\n              <>\n                {getSender(user, selectedChat.users)}\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\n              </>\n            ) : (\n              <>\n                {selectedChat.chatName.toUpperCase()}\n                <UpdateGroupChatModal\n                  fetchMessages={fetchMessages}\n                  fetchAgain={fetchAgain}\n                  setFetchAgain={setFetchAgain}\n                />\n              </>\n            )}\n          </Text>\n          <Box\n            display=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"rgb(232, 232, 232,.6)\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl id=\"first-name\" isRequired mt={3} display=\"flex\">\n              <Input\n                borderRadius={\"none\"}\n                variant=\"outline\"\n                bg=\"rgba(128, 128, 128, 0.7)\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n                border={\"none\"}\n                onKeyDown={handleKeyDown}\n              />\n\n              <Button\n                style={{\n                  color: \"#E50061\",\n                  borderRadius: \"0px\",\n                  backgroundColor: \"#FFFFFF\",\n                }}\n                onClick={sendMessage}\n              >\n                {\" \"}\n                send{\" \"}\n              </Button>\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"center\"\n          h=\"100%\"\n        >\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n",["112"],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\config\\ChatLogics.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\GroupChatModal.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\ProfileModal.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\UserAvatar\\UserListItem.js",["113"],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\ScrollableChat.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\UserAvatar\\UserBadgeItem.js",[],[],"C:\\Users\\harsh\\Desktop\\chat\\frontend\\src\\components\\miscellaneous\\UpdateGroupChatModal.js",[],[],{"ruleId":"114","severity":1,"message":"115","line":31,"column":28,"nodeType":"116","messageId":"117","endLine":31,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":41,"column":6,"nodeType":"120","endLine":41,"endColumn":18,"suggestions":"121"},{"ruleId":"114","severity":1,"message":"122","line":20,"column":8,"nodeType":"116","messageId":"117","endLine":20,"endColumn":21},{"ruleId":"114","severity":1,"message":"123","line":32,"column":10,"nodeType":"116","messageId":"117","endLine":32,"endColumn":16},{"ruleId":"114","severity":1,"message":"124","line":32,"column":18,"nodeType":"116","messageId":"117","endLine":32,"endColumn":27},{"ruleId":"114","severity":1,"message":"125","line":33,"column":10,"nodeType":"116","messageId":"117","endLine":33,"endColumn":18},{"ruleId":"118","severity":1,"message":"126","line":79,"column":6,"nodeType":"120","endLine":79,"endColumn":8,"suggestions":"127"},{"ruleId":"118","severity":1,"message":"128","line":84,"column":6,"nodeType":"120","endLine":84,"endColumn":20,"suggestions":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"114","severity":1,"message":"132","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":19},"no-unused-vars","'setIsFooterAbsolute' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchChats'. Either include it or remove the dependency array.","ArrayExpression",["133"],"'animationData' is defined but never used.","'typing' is assigned a value but never used.","'setTyping' is assigned a value but never used.","'istyping' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has a missing dependency: 'fetchMessages'. Either include it or remove the dependency array.",["135"],"no-new-object",["136"],"'ChatState' is defined but never used.",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},"no-object-constructor","Update the dependencies array to be: [fetchAgain, fetchChats]",{"range":"143","text":"144"},"Update the dependencies array to be: [user]",{"range":"145","text":"146"},"Update the dependencies array to be: [fetchMessages, selectedChat]",{"range":"147","text":"148"},[1294,1306],"[fetchAgain, fetchChats]",[2324,2326],"[user]",[2416,2430],"[fetchMessages, selectedChat]"]